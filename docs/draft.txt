                           The RecipeJSON Format

Abstract

   RecipeJSON is a recipe data interchange format based on JavaScript
   Object Notation (JSON).  It defines a type of JSON objects and
   the manner in which they are combined to represent data about
   recipes features, their properties, and their spatial extents.

Status of This Memo

   This is currently in the experimental stage and very much subject to change.
   This first draft was created from the 20.07.2017 to the 22.07.2017 at the "Code Kombüse" Hackathon and 
   is my first formal definition, so don't hit me for it.

Example

    A RecipeJSON:

    {
        "version": 1,
        "title": "Schinken - Käse - Toast à la brenny",
        "subtitle": "schnell und einfach mit dem Toaster und der Mikrowelle (mit Grillfunktion)",
        "servings": {
            "type": "item",
            "count": 1
        },
        "tags": [
            "Fingerfood",
            "Mikrowelle",
            "Studentenküche",
            "einfach",
            "Snack",
            "Schnell",
            "Resteverwertung"
        ],
        "recipes": [
            {
                "ingredients": [
                    {
                        "name": "Toastbrot",
                        "unit": "Scheibe/n",
                        "amount": 2,
                        "attributes": [
                            "Sandwichtoast"
                        ]
                    },
                    {
                        "name": "Schmelzkäse",
                        "unit": "Scheibe/n",
                        "amount": 2
                    },
                    {
                        "name": "Schinken",
                        "unit": "Scheibe/n",
                        "amount": 2,
                        "attributes": [
                            "gekochter"
                        ]
                    }
                ],
                "directions": [
                    {
                        "time": "P1M",
                        "text": "Toastbrot rösten",
                        "ingredients": ["Toastbrot"],
                        "result": "Toastbrot geröstet",
                    },
                    {
                        "time": "P1M",
                        "text": "Toastbrot mit Schmelzkäse und Schinken belegen",
                        "ingredients": ["Toastbrot geröstet", "Schmelzkäse", "Schinken"],
                        "result": "Toast mit Schinken und Käse",
                    },
                    {
                        "time": "P1M",
                        "text": "Toastbrot mit Käse Schmelzkäse und Schinken im Mikrowellenherd grillen",
                        "ingredients": ["Toast mit Käse und Schinken und Käse"],
                        "result": "",
                    },
                ]
            }
        ],
        "language": "de",
        "source": "http://www.chefkoch.de/rezepte/1085491214404371/Schinken-Kaese-Toast-a-la-brenny.html",
        "author": "brenny",
        "creationDate": "2008-06-26T22:43:17+02:00"
    }

1.0.0 The Recipe Envelope

    The base level of a RecipeJSON has to contain the following fields:

    `version`, `title`, `language`, `creationDate`, `servings`, `recipes`

    it may also contain the following fields:

    `subtitle`, `source`, `author`, `images`, `links`, `tags`

1.0.1 Version
 
    The Recipe envelope has to contain a field `version` as number. This draft just defines version 1,
    more may be defined in the future, and may not be compatible to this version.

1.0.2 Title
 
    The Recipe envelope has to contain a field `title` as string. This is should just be the title of the whole recipe.

1.0.3 Language
 
    The Recipe envelope has to contain a field `language` as string. 
    This is should be the language of the recipe, and contain any ISO 639-1 Code.

1.0.3 Creation Date
 
    The Recipe envelope has to contain a field `creationDate` as string.
    This is should be the creation date and time as ISO 8601 date formatted as YYYY-MM-DDThh:mm:ssTZD

1.0.4 Servings

    The Recipe envelope has to contain a field `servings` as object.
    This itself has to contain two fields:

    `type`, `count`

    `type` may be one of two values: 
    
        `person` marking it as serving number of persons or
        `item` marking it as producing number of items

    `count` has to be a number and identifies the number of persons or servings of the recipe

1.0.5 Recipes

    The Recipe envelope has to contain a field `recipes` containing a list of recipe objects.
    The recipe object is defined in 1.2.0.

1.0.6 Subtitle
    
    The Recipe envelope may contain a field `subtitle` as string.
    The subtitle should describe the recipe in more detail than the title.

1.0.7 Source

    The Recipe envelope may contain a field `source` as string.
    The source has to contain a URL to the source.

1.0.8 Author

    The Recipe envelope may contain a field `author` as string.
    The author may contain an email address or username.

1.0.9 Images

    The Recipe envelope may contain a field `images` as a list of strings. 
    The images have to be URLs and should display the full recipe with all subrecipes.

1.0.10 Links

    The Recipe envelope may contain a field `links` as a list of strings. 
    The images have to be URLs and should be links to websites containing relevant infomation for this recipe.

1.0.11 Tags

    The Recipe envelope may contain a field `tags` as a list of strings. 
    The tags should describe the recipe and may be used for search.

1.2.0 Recipe object definition

    

Authors' Addresses

   Leon Kunert
   info@leonkunert.de

   Felix Böösch
